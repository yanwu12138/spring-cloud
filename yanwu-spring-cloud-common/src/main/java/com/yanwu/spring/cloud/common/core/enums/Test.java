package com.yanwu.spring.cloud.common.core.enums;

import com.yanwu.spring.cloud.common.pojo.RequestInfo;
import com.yanwu.spring.cloud.common.pojo.Result;
import com.yanwu.spring.cloud.common.utils.RestUtil;
import com.yanwu.spring.cloud.common.utils.ThreadUtil;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpMethod;

import java.util.HashMap;

/**
 * @author XuBaofeng.
 * @date 2024/1/2 16:25.
 * <p>
 * description:
 */
@Slf4j
public class Test {

    public static void main(String[] args) {
        String url = "http://101.132.27.184:7001/test/trySend/";
        HashMap<String, Object> param = new HashMap<>();
        param.put("type", "upMessageConfig");
        param.put("magic", "1111111111");
        param.put("uploadAttitude", Boolean.TRUE);

        String sns = "202106001344,20210600149f,2021060016e9,20210600148e,202106001710,202106001511,202106001385,2021060012a0,202106001825,202106001773,202106001328,202106001699,20210600168b,202106001631,202106001704,2021060012e5,202106001168,2021060016c9,20210600138a,2021060013c2,2021060012c6,20210600158f,2021060016e3,202106001609,2021060016b3,20210600116e,202106001683,202106001353,20210600169a,2020080000c5,202106001365,202106001467,20210600177e,202106001695,2021060016a2,20210700000a,2021060013e2,20210600133f,2021060013f8,202106001510,20220300065d,20210600142b,202106001336,202106001359,202203000779,20210600167e,202106001397,20210600149d,2021060015ef,202106001494,20210600144e,202106001395,2021060014e3,2021060016cd,202106001182,2021060016f9,202106001175,202106001481,2021060014ca,2021060014d0,20210600162b,20210600164c,202106001172,20210600169c,20210600142a,20210600150e,20210600146b,20210600146c,202106001464,202106001541,20210600173c,202106001536,202106001770,202106001562,20210600134a,202106001730,2021060014cf,2021060014c2,202106001185,202106001509,20210600147d,2021060013bc,20210600159f,202106001656,202106001324,202203000576,2021060012ad,20210600152c,20210600168c,202106001744,20210600170e,20220300050d,20210600178b,202106001450,2021060016ba,2021060012fd,2021060016b7,202106001725,202106001584,202106001746,20210600148d,202106001778,202106001662,2021060013a5,2021060013e4,202106001472,202106001737,20210600144c,2021060013df,2021060015a8,2021060014f8,2021060012f3,2021060016f1,2021060012df,202106001709,20210600173a,202106001659,202106001786,20210600131a,202106001428,202106001298,202106001318,20210600155c,202106001180,202106001380,202106001479,2021060012d5,20210600130f,2021060014c8,2021060012aa,20210600164b,2021060016ed,20210600131d,2021060012fe,202106001499,202106001383,2021060014ba,202106001447,2021060016f7,2021060014fb,2021060015c5,202106001303,202106001323,2021060016b9,2021060014ff,202106001551,2021060013a7,202106001694,20210600172d,2021060014cb,202106001530,2021060014d6,2021060012fa,20220300051c,202106001377,20210600148f,202106001409,2021060012e1,202106001690,20210600157f,202106001742,2021060015bf,202106001348,2021060012e4,202106001590,20210600175b,2021060015f6,2021060014c0,202106001680,202106001333,2021060014fc,20210600128a,2021060012b8,2021060016c2,2021060013a2,202106001834,20210600169d,202102000077,202106001679,20210600171b,20210600169e,2021060012dd,202107000014,20210600172c,2021060014db,202106001162,2022030002a3,202106001186,202106001721,202106001753,202106001459,20210600166c,202008000140,20210600149b,202106001686,2021060016be,2021060014be,2021060013c4,20210600167c,2021060012bb,20210600132e,202106001681,20210600152f,20210600133d,202106001301,2021060014ef,2021060014d1,202106001741,2021060017ad,202106001673,2021060015f0,202203000295,2021060013cb,202106001534,202106001512,202106001347,202106001300,202106001434,202106001504,202106001755,202201000017,202106001477,202106001754,202106001399,2021060012ac,202106001417,2021060012c4,2021060014f1,20210600154c,2021060012a7,2021060014b1,2021060014d5,2021060014a5,202106001793,20210600167a,202106001358,20210600145b,2021060014f7,20210600130e,202106001425,2021060017a3,2021060013f1,20210600176b,2021060013ac,2021060014b3,20210600144a,2021060013f9,2021060016dc,2021060014ec,20210600147b,2021060014a6,2021060014c1,20210600179b,202106001171,2021060016c0,20210600179a,2021060014e2,202106001316,202106001731,20210600161b,20210600172b,202106001178,20210600145e,202106001535,202106001729,202106001422,202106001521,202106001290,202106001403,202106001319,20210600146f,202106001623,2021060013a6,20210700000e,2021060014ea,2021060016af,2021060014d7,202106001589,2021060012f8,2021060016cf,20210600168a,20210600141e,202106001598,20210600143c,2021060013f7,202106001736,2022030006b4,2021060012a1,2021060013d1,202106001772,202106001691,20210600176a,20210600136b,202106001582,202106001553,202106001484,202106001700,20210600133a,202106001671,20210600147f,202203000572,2021060014c3,20210600144b,20210600117d,2021060014fe,202106001604,2021060015d1,2021060014ee,20210600137b,2021060015ca,2021060015ad,20210600136c,202201000014,20210600145a,2021060014bf,2021060012ae,202106001646,2021060016e6,2021060017a0,20210600135f,2021060014df,202106001791,2021060015a7,20210600182c,202106001766,2021060012e9,202106001368,202106001339,202106001478,20210600166d,202106001771,20210600130b,20210700000d,202106001689,202106001795,202106001289,2021060015b3,202106001545,2021060016c1,202106001531,2021060016de,2021060014a8,202106001797,20210600151a,2021060014b9,202106001640,202203000585,20210600150a,20210600171d,202106001491,2021060016c7,2021060016b0,2021060012f6,202106001669,202106001717,2021060014a1,202106001366,202106001432,2021060014a4,2021060016db,2021060013b2,20210600144d,202106001789,2021060013a1,202106001486,20210600116f,20210600134c,20210600172a,2021060014d4,202106001788,20210600131b,202106001581,2021060015cd,202203000291,202203000280,2021060016c6,202106001684,202106001670,202106001707,202106001751,20210600175f,2021060015f3,202106001642,2021060016fa,20210600132f,2021060010ac,202106001622,202106001621,20210600167d,202106001777,20210600138b,2021060013f4,202201000028,2021060016da,20210600179e,202106001170,202106001495,202106001361,2021060012e3,202106001310,20210600133b,20210600163c,202201000019,202106001469,20210600163b,202106001705,2021060014bd,2021060012b3,20210600150c,2021060016bd,20210700000c,202106001585,2021060012c9,2021060016a6,20210600150f,2021060012d6,2021060014f3,2021060017b5,2021060016fc,2021060013cf,202106001740,202106001480,20210600160d,202106001451,202106001322,20210600154f,202106001396,2021060012a4,202107000013,202106001508,2021060016a0,202106001775,2021060016a4,2021060013f3,20210600173f,2021060012fc,20210600169f,202106001363,20210600146d,2021060015e2,2021060014c9,2021060014b7,2021060016ae,2021060014c7,2021060012c0,202106001299,202106001548,20210600178d,2021060016f5,202106001776,202203000105,202106001438,20210600142d,202106001544,202106001628,202106001761,2021060016c3,202106001542,2021060014c4,202106001650,20210600137a,20210600132b,202106001471,2021060013c6,202106001794,202106001774,202106001648,20210600117b,2021060013e1,2021060013a8,2021060014a9,202106001173,202107000010,2021040002da,20210600174b,202106001181,2021060015a6,2021060013ed,20210600140e,2021060016c5,2021060015b1,2021060016f2,2021060012b2,202106001539,202106001513,202106001394,2021060012f5,20210600170c,2021060016b8,202106001373,202106001602,202106001618,2021060014f6,2021060017a6,202106001780,20210600150d,202106001836,2021060013a9,202106001748,202106001435,202106001426,2021060013ff,2021060012f7,2021060016ac,202106001750,2021060012c5,2021060012b1,202106001444,2021060016b6,2021060012b6,2021060011c9,2021060014ad,20210600145c,202106001728,202106001764,202106001724,20210600117e,202106001293,202106001758,2021060016a1,20210600164e,202106001529,20210600164a,202106001799,202106001291,2021060016d6,202106001386,202106001702,202106001767,20210600176e,202106001455,202106001633,202106001401,2021060015d7,20210600179f,2021060013b7,2021060012d0,202106001649,20210600159d,202106001308,2021020000a9,202106001179,20210600116b,2021060014fd,20210600176d,202106001456,2021060017a5,2021060016a9,202106001439,20220300070f,202106001321,2021060016d1,20210600134b,202106001626,20210600169b,20210600139d,202106001346,202106001779,202106001663,20210600141d,202106001652,2021060014ac,2021060012b5,202106001315,2021060013da,202106001781,2021060013b3,202203000769,20210600173d,202106001402,202106001465,202106001611,20210600170d,2021060016f3,20210600163e,202106001796,2021060016d8,20210600136d,202106001768,2021060012a8,2021060013e0,2021060016e2,202106001641,20210600176c,20210600147e,202106001517,202106001701,202106001577,202106001183,20210600168e,2021060015d3,2021060015a4,2021060014d9,202106001514,20210600134f,20210600175c,202106001528,2021060016f6,2021060015a1,2021060016ec,202106001523,20210600101e,2021060015a5,20210600139e,20210600117c,2021060013e8,2021060014ab,2021060015f8,2021060015be,202106001563,202106001726,20210600143e,202106001424,202106001364,20210600174f,20210600165c,20210600116c,202106001591,2021060014aa,202106001420,2021060013c8,202106001830,20210600151f,2021060015c2,2021060016f8,20210600138d,202201000024,20210600152d,2021060014e8,2021060014cd,20210600130c,20210600148c,202106001727,2021060016ef,20210600140a,202106001605,20210600165b,20210600131f,20210600165a,202106001583,202106001470,202106001371,20210600161c,202106001716,2021060016ea,20210600132c,20210600165e,2021060012b4,202106001376,2021060013f6,2021060014de,20210600137c,2021060017c1,2021060017ab,202106001601,20210600137e,202106001617,20210600154e,2021060015aa,2021060012a2,202201000010,202106001654,202201000016,202106001378,202106001608,2021060013cc,2021020000a8,2021060013b5,2021060013d0,2021060016cc,202106001624,2021060013e5,20210600139c,202106001827,20210600155b,20210600158c,2021020000a5,202106001452,20210600161d,2021060016fd,202203000586,202106001314,2021060016e7,20220300077d,20210600140b,202107000012,2021060012b9,2021060014da,202106001720,2021020000b1,20210600143a,20210600162d,20210600153a,202106001038,2021060016bf,202106001174,20210600148b,2021060012e2,2021060016b4,20210600177d,20210600173b,2021060014b2,202106001696,2021020000b7,2021060013e7,2021060014f5,2021060016ca,202106001837,202106001418,2021060013bd,2021060014f0,20220300056d,2021060015b0,2021060015ab,20210600170a,202106001625,20220300056f,2021060017b4,202106001635,202106001442,2021060012d8";
        for (String sn : sns.split(",")) {
            RequestInfo<Object> instance = RequestInfo.getInstance(HttpMethod.POST, (url + sn), Object.class);
            instance.buildHeaders("Content-Type", "application/json").buildBody(param);
            Result<Object> execute = RestUtil.execute(instance);
            log.info("test rest, url: {}, param: {}, result: {}", url, param, execute);
            ThreadUtil.sleep(100);
        }
    }
}
